#include <iostream>
#include <vector>
#include <string>
 
using namespace std;
 
// Function to rearrange disks and count the number of moves
int rearrangeDisks(int n) {
    // Initialize a vector with 2n disks, alternating between 'D' and 'L'
    vector<char> disks(2 * n);
    for (int i = 0; i < 2 * n; ++i) {
        disks[i] = (i % 2 == 0) ? 'D' : 'L';
    }
 
    int moveCount = 0; // Initialize move counter
 
    // Iterate through each disk
    for (int i = 0; i < 2 * n; ++i) {
        if (disks[i] == 'L') { // Check if the current disk is 'L'
            int target = moveCount; // Set the target position for 'L'
            // Move 'L' towards its target position
            while (i > target) {
                swap(disks[i], disks[i - 1]); // Swap 'L' with the disk to its left
                moveCount++; // Increment the move counter
                
                // Print the current state of disks after each swap
                for (char disk : disks) {
                    cout << disk << ' ';
                }
                cout << endl;
                
                i--; // Update the current index after swapping
            }
        }
    }
 
    return moveCount; // Return the total number of moves made
}
 
int main() {
    // Rearrange disks with n = 4 and capture the total number of moves
    int totalMoves = rearrangeDisks(4);
    cout << "Total number of moves: " << totalMoves << endl;
 
    return 0;
} 
